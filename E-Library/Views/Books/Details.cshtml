@model BookViewModel
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var colors = new[] { "rgb(65, 137, 252)", "rgb(202, 252, 111)", "rgba(30, 230, 220)", "rgb(255, 81, 119)", "rgb(255, 199, 81)" };
    var c = 0;
    var book = Model;
    var defaultImageBack = "bg.jpg";
}

<div class="card" style="background-color: rgba(255, 255, 255, 0.7); padding: 2em;">
    <div class="row">
        <div class="container-fluid">
            <span class="text-primary">
                <a asp-action="Index" asp-controller="Home">LiBook</a>
                &#8594;
                <a asp-action="Index">Books</a>
                &#8594;
                @Model.Title
            </span>
        </div>
        <br/>
        <hr/>
        <div class="col-md-4">
            @if (string.IsNullOrEmpty(Model.ImagePath))
            {
                <img src="/pics/Books/default.png" class="img-fluid"/>
            }
            else
            {
                <img src="/pics/Books/@Model.ImagePath" class="img-fluid"/>
            }
        </div>
        <div class="col-md-8">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Description):
                </dt>
                <dd class="text-justify">
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dd class="float-right">
                    @await Component.InvokeAsync("BookDetailsManagement", new {model = Model})
                    @await Component.InvokeAsync("LikeButton", new {model = Model})
                    @await Component.InvokeAsync("DownloadBook", new {model = Model})
                </dd>
            </dl>
        </div>
        <div class="text-right float-right" style="width: 99%">
            
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 text-lg-right" style="font-size: 1.3em;">
            @foreach (var genre in Model.BooksGenres)
            {
                <span class="badge text-white" style="border-radius: 5px; background-color: #@genre.Genre.Color">#@genre.Genre.Name.ToLower()</span> 
            }
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="AssignGenres" asp-route-id="@Model.Id" class="btn btn-success fa fa-plus"></a>
            }
        </div>
    </div>
</div>
<br/>
<div style="background-color: rgba(255, 255, 255, 0.7); padding: 2em;" class="card">
    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-6">
                    <h5>Comments</h5>
                </div>

            </div>

            <br />
            <div class="card">
                <div class="card-body">
                    <form asp-action="AddCommentConfirmed" asp-controller="Comment">
                        <input type="hidden" asp-for="Id" />
                        <textarea name="comment" id="comment" placeholder="Enter your comment here" class="input-group-lg border-top-0 border-right-0 border-left-0" rows="5" style="min-width: 100%;" maxlength="250" minlength="50"></textarea>
                        <br />
                        <input type="submit" value="Comment it!" class="btn btn-block btn-success" />
                    </form>
                </div>
            </div>
            <br/>
            @await Component.InvokeAsync("BookComments", new { model = Model })

        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-8">
                    <h5>Authors</h5>
                </div>
                <div class="col-md-4 text-right">
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="AssignAuthors" asp-route-id="@Model.Id" class="btn btn-info fa fa-plus"></a>
                    }
                </div>
            </div>
            <br/>
            <div class="row">
                @foreach (var authorBookViewModel in Model.AuthorsBooks)
                {
                    var author = authorBookViewModel.Author;
                    <div class="col-md-6">
                        <div class="card">
                            @if (!string.IsNullOrEmpty(author.ImagePath))
                            {
                                <img class="card-img-top" src="/pics/Authors/@author.ImagePath" alt="Card image cap">
                            }
                            else
                            {
                                <img class="card-img-top" src="/pics/Authors/default.png" alt="Card image cap">
                            }
                            <div class="card-body text-center">
                                <h6 class="card-title"><a asp-action="Details" asp-controller="Authors" asp-route-id="@author.Id" class="text-info">@author.LastName @author.FirstName</a></h6>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="/lib/jquery/dist/jquery.js"></script>
<script src="/lib/jquery/dist/jquery.backstretch.js"></script>
<script type="text/javascript" src="/js/bg.js"></script>
<script type="text/javascript">
    bg("/pics/Books/@(Model.ImagePath??defaultImageBack)");
</script>