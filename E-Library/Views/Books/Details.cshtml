@model BookViewModel
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="background-color: rgba(255, 255, 255, 0.7); padding: 2em;" class="card">
    <h2>@Model.Title</h2>
    <div class="row">
        <div class="col-md-4">
            <img src="/pics/Books/@Model.ImagePath" class="img-fluid" />
        </div>
        <div class="col-md-8">
            <dl class="dl-horizontal">
                <dd class="text-justify">
                    <strong>Genre: </strong> @Html.DisplayFor(model => model.Genre)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Description):
                </dt>
                <dd class="text-justify">
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dd class="float-right">
                    @await Component.InvokeAsync("BookDetailsManagement", new { model = Model })
                    @await Component.InvokeAsync("LikeButton", new { model = Model })
                    @await Component.InvokeAsync("DownloadBook", new { model = Model })
                </dd>
            </dl>
        </div>
    </div>
</div>
<br/>
<div style="background-color: rgba(255, 255, 255, 0.7); padding: 2em;" class="card">
    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-6">
                    <h5>Comments</h5>
                </div>
                <div class="col-md-6 text-right">
                    @Html.ActionLink("\tCreate", "AddComment", "Comment", new { id = Model.Id }, new { @class = "btn btn-success fa fa-plus-circle"})
                </div>
            </div>
            <br/>
            @await Component.InvokeAsync("BookComments", new {model = Model})
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-8">
                    <h5>Authors</h5>
                </div>
                <div class="col-md-4 text-right">
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="AssignAuthors" asp-route-id="@Model.Id" class="btn btn-info fa fa-plus"></a>
                    }
                </div>
            </div>
            <br/>
            <div class="row">
                @foreach (var authorBookViewModel in Model.AuthorsBooks)
                {
                    var author = authorBookViewModel.Author;
                    <div class="col-md-6">
                        <div class="card">
                            @if (!string.IsNullOrEmpty(author.ImagePath))
                            {
                                <img class="card-img-top" src="/pics/Authors/@author.ImagePath" alt="Card image cap">
                            }
                            else
                            {
                                <img class="card-img-top" src="/pics/Authors/default.png" alt="Card image cap">
                            }
                            <div class="card-body text-center">
                                <h6 class="card-title"><a asp-action="Details" asp-controller="Authors" asp-route-id="@author.Id" class="text-info">@author.LastName @author.FirstName</a></h6>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="/lib/jquery/dist/jquery.js"></script>
<script src="/lib/jquery/dist/jquery.backstretch.js"></script>
<script type="text/javascript" src="/js/bg.js"></script>
<script type="text/javascript">
    bg("/pics/Books/@Model.ImagePath");
</script>