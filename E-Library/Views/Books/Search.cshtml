@model object[]
@using LiBook.Services.Interfaces

@{
    ViewData["Title"] = "Search";
}
@inject IGenreService GenreService
@{
    var genres = GenreService.GetList().ToArray();
}

<div class="row">
    <div class="col-md-6">
    </div>
    <div class="col-md-6 text-right">
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-success fa fa-plus"></a>
        }
    </div>
</div>
<form asp-action="Search" asp-controller="Books" method="post">
    <input name="word" class="form-control border-right-0 border-left-0 border-top-0" style="border-bottom: 2px solid rgb(127, 0, 152)" type="text" placeholder="Search" aria-label="Search" id="word" value="@Model[1]"/>
    <br />
    <div class="row">
        <div class="col-sm-2">
            @foreach (var genre in genres)
            {
                <div class="chiller_cb">
                    <input id="@genre.Id" type="checkbox" name="genres" value="@genre.Id" @(((string[])Model[0]).Any(i => i == genre.Id) ? "checked" : "")>
                    <label for="@genre.Id">@genre.Name</label>
                    <span></span>
                </div>
            }

            <br/>
            <input type="submit" value="Search" class="btn btn-block text-white" style="background-color: rgb(127, 0, 152);" />
        </div>
        <div class="col-sm-10">
            <div class="row card-columns">
                @await Component.InvokeAsync("SearchBookByGenre", new  { genres = Model[0], word = Model[1] })
            </div>
        </div>
    </div>
</form>

<script src="/lib/jquery/dist/jquery.js"></script>
<script src="/js/site.js"></script>
<script type="text/javascript">
    highlight("menu_books");
</script>
<script type="text/javascript">
    $("#word").keyup(function () {
        var txt = $('#word').val();
        $('.book').each(function () {
            $(this).hide();
            if ($(this).text().toUpperCase().indexOf(txt.toUpperCase()) != -1) {
                $(this).show();
            }
        });
    });
</script>
